######################### KLIPPER MACRO FILE #########################

[gcode_macro LOAD_FILAMENT]
description: Load filament at given temperature
gcode:
    #Parameters
    {% set hotendtemp = params.HOTEND|default(235)|int %}
    {% set numLoops = params.NUMLOOPS|default(2)|int %}
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0 ; Disable filament sensor
    G21 ;Let the printer know you are following this point with metric values
    G90 ;Let the printer know you are using absolute positioning
    M109 S{hotendtemp} ;Heat hotend to specified temperature
    G4 S5 ; wait 5 seconds
    G92 E0 ;Reset the position of the extruder
    {% for i in range(numLoops|int) %}
        G1 E50 F200 ;Feed 50 mm of filament at 200 mm/minute speed. Slow move.
        G92 E0 ;Reset the position of the extruder
    {% endfor %}
    M400 ;Finish move
    M104 S0 ;Turn off the hotend

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament given temperature
gcode:
    #Parameters
    {% set hotendtemp = params.HOTEND|default(235)|int %}
    {% set numLoops = params.NUMLOOPS|default(3)|int %}
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0 ; Disable filament sensor
    G21 ;Let the printer know you are following this point with metric values
    G90 ;Let the printer know you are using absolute positioning
    M109 S{hotendtemp} ;Heat hotend to given/default temperature to unload
    G92 E0 ;Reset the position of the extruder
    G1 E10 F100 ; Extrude a short distance before unloading to avoid blob forming
    G92 E0 ;Reset the position of the extruder
    {% for i in range(numLoops|int) %}
        G1 E-50 F2000 ;Retract 50 mm of filament at 2000 mm/minute speed, change 700 to the lenght of your bowdentube + 100 mm.
        G92 E0 ;Reset the position of the extruder
        M400 ; Wait for command
    {% endfor %}
    M117 REMOVE FILAMENT NOW ;Display message on LCD-display to remove the filament
    M400 ;Wait for command to finish
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
	#Parameters
    {% set bedTemp = params.BED|int %}
    {% set hotendTemp = params.HOTEND|int %}
    {% set chamberTemp = params.CHAMBER|default(0)|int %}
    {% set filamentType = params.FILAMENT|default(PET)|string %}
    
    ; FYI for what we are getting.
    # {action_respond_info("Print starting with the following parameters\n
    #                       Bed Temp: %i\n
    #                       Hotend Temp: %i\n
    #                       Chamber Temp: %i\n
    #                       Filament Type: %s")}

    ;Allocate custom settings
    ; FILAMENT_SETTINGS FILAMENT={filamentType}
    {% if filamentType == "PLA" %}
        SET_GCODE_OFFSET Z=0 ; Tune this to the actual offset we calibrate for ABS, since Z-endstop position is tuned for PETG
        SET_PRESSURE_ADVANCE ADVANCE=0.050 ; Set at default for now, set to actual value once tuned for PLA
    {% elif filamentType == "PET" %}
         SET_GCODE_OFFSET Z=0
        SET_PRESSURE_ADVANCE ADVANCE=0.055 ; Tuned to this value using Esun Fire Engine Red PETG
    {% elif filamentType == "ABS" %}
        SET_GCODE_OFFSET Z=0 ; Tune this to the actual offset we calibrate for ABS, since Z-endstop position is tuned for PETG
        SET_PRESSURE_ADVANCE ADVANCE=0.050 ; Set at default for now, set to actual value once tuned for ABS
    {% endif %}

    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0 ; Disable filament sensor

    M117 Homing...                 ; display message
    G28 Y0 X0 Z0

    M141 S{chamberTemp} ; Set temperature target for chamber
    M190 S{bedTemp} ; Set bed temperature
    G4 P900000

    _HEATSOAK_CHAMBER CHAMBER={chamberTemp} ; Heat soak some more if necessary.

    M117 Calibrating...                 ; display message
    Z_TILT_ADJUST ; Start Bed Compensation
    BED_MESH_CALIBRATE
    G28 Y0 X0 Z0
    
    M117 Heating...                 ; display message
	
    M109 S{hotendTemp}

    G28 Y0 X0 Z0 ; Home to get rid of floating filament
    
    #Purge Line Gcode
    G92 E0;
    G90
    G0 X5 Y5 F6000
    G0 Z0.4
    G91
    G1 X120 E30 F1200;
    G1 Y1
    G1 X-120 E30 F1200;
    G92 E0;
    G90
    
    G1 Z15.0 F600 ; move the platform down 15mm
    G1 X125 Y125 F3000
    G92 E0 ; zero the extruded length again
    G1 F9000

    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=1 ; Re-enable filament sensor
    M117 Printing...

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    
    #  Commence PRINT_END
    M400                             ; wait for buffer to clear
    G92 E0                           ; zero the extruder
    G1 E-4.0 F3600                   ; retract
    G91                              ; relative positioning
    G0 Z{z_safe} F3600               ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000    ; move nozzle to remove stringing
    
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    G90                              ; absolute positioning
    G0 X{max_x / 2} Y{max_y} F3600   ; park nozzle at rear
    SET_FILAMENT_SENSOR SENSOR=btt_sensor ENABLE=0 ; Disable filament sensor
    M18 S30 ; Start wait for 30s before turning off the stepper motors.
    M117 Finished!

[gcode_macro FILAMENT_SETTINGS]
gcode:
    {% set filamentType = params.FILAMENT|default(PET)|string %}
    {% if filamentType == "PLA" %}
        SET_GCODE_OFFSET Z=0 ; Tune this to the actual offset we calibrate for ABS, since Z-endstop position is tuned for PETG
        SET_PRESSURE_ADVANCE ADVANCE=0.050 ; Set at default for now, set to actual value once tuned for PLA
    {% elif filamentType == "PET" %}
         SET_GCODE_OFFSET Z=0
        SET_PRESSURE_ADVANCE ADVANCE=0.055 ; Tuned to this value using Esun Fire Engine Red PETG
    {% elif filamentType == "ABS" %}
        SET_GCODE_OFFSET Z=0 ; Tune this to the actual offset we calibrate for ABS, since Z-endstop position is tuned for PETG
        SET_PRESSURE_ADVANCE ADVANCE=0.050 ; Set at default for now, set to actual value once tuned for ABS
    {% endif %}

[gcode_macro _HEATSOAK_CHAMBER]
gcode:
    {% set chamber = params.CHAMBER|default(0)|int %}

    {% if chamber and printer['temperature_sensor chamber'].temperature|float < (chamber - 1.0) %} ; Give some hysteresis
        {action_respond_info('Heat soaking chamber to %dC, from: %dC' % (chamber, printer['temperature_sensor chamber'].temperature|float))}
        M106 S255  # part cooling fan at full blast
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber_temp" MINIMUM={chamber}  # wait for chamber temp, with the bed doing the heating
        M107  # part cooling fan off
    {% endif %}

[gcode_macro M141]
gcode:
    {% set temperature = params.S|default(0)|int %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={temperature}

# Convert Marlin linear advance (M900) commands to Klipper (SET_PRESSURE_ADVANCE) commands.
# Used in conjunction with Marlin's linear advance calibration tool: 
# https://marlinfw.org/tools/lin_advance/k-factor.html
[gcode_macro M900]
gcode:
	# Parameters
	{% set pa = params.K|float %}
	
	SET_PRESSURE_ADVANCE ADVANCE={pa}
